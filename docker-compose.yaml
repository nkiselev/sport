version: '3.8'

# Services
services:

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: sport-test-nginx
    restart: unless-stopped
    ports:
      - '${APP_PORT:-8080}:8080'
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - sport-test

  # PHP Service
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        WWWUSER: '${WWWUSER}'
        WWWGROUP: ${WWWGROUP}
    container_name: sport-test-php
    restart: unless-stopped
    working_dir: /var/www
    ports:
      - "9000:9000"
    environment:
      WWWUSER: '${WWWUSER}'
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}'
    volumes:
      - .:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/php/php.ini:/etc/php/8.2/fpm/php.ini
      - ${HOME}/.composer:/.composer
    networks:
      - sport-test
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: sport-test-mysql
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - sport-test-mysql:/var/lib/mysql
      - ./docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - sport-test
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    container_name: sport-test-redis
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'sport-test-redis:/data'
    networks:
      - sport-test
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

volumes:
  sport-test-mysql:
    driver: local
  sport-test-redis:
    driver: local

networks:
  sport-test:
    driver: bridge
    name: sport-test_network
